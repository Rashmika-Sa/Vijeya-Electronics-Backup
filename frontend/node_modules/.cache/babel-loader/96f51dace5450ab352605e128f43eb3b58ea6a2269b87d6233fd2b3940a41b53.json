{"ast":null,"code":"var _jsxFileName = \"D:\\\\UNI\\\\ITP_Project\\\\frontend\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport Landing from \"./Components/LandPage/Landing\";\nimport CheckStatus from \"./Components/Status/CheckStatus\";\nimport JobF from \"./Components/JobF/JobForm\";\nimport AddTechnician from \"./Components/AddTechnicians/AddTechnician\";\nimport AdminDashboard from \"./Components/Admin/AdminDashboard\";\nimport AllJobs from \"./Components/Admin/AllJobs\";\nimport ModifyJobs from \"./Components/Admin/ModifyJobs\";\nimport NotificationPanel from \"./Components/Admin/NotificationPanel\";\nimport RoleSwitcher from \"./Components/utils/RoleSwitcher\"; // optional, for dev testing\n\n// üîí Role protection wrapper\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  children,\n  allowedRoles\n}) {\n  const role = localStorage.getItem(\"role\");\n  if (!allowedRoles.includes(role)) {\n    alert(\"Access denied. You must be an admin to view this page.\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n}\n_c = ProtectedRoute;\nfunction App() {\n  const role = localStorage.getItem(\"role\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pt-[90px]\",\n    children: [/*#__PURE__*/_jsxDEV(RoleSwitcher, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: role === \"admin\" ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/admin\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/check-status\",\n        element: /*#__PURE__*/_jsxDEV(CheckStatus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          allowedRoles: [\"admin\"],\n          children: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"create-job\",\n          element: /*#__PURE__*/_jsxDEV(JobF, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"add-technician\",\n          element: /*#__PURE__*/_jsxDEV(AddTechnician, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"all-jobs\",\n          element: /*#__PURE__*/_jsxDEV(AllJobs, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"modify-jobs\",\n          element: /*#__PURE__*/_jsxDEV(ModifyJobs, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"notifications\",\n          element: /*#__PURE__*/_jsxDEV(NotificationPanel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Routes","Route","Navigate","Landing","CheckStatus","JobF","AddTechnician","AdminDashboard","AllJobs","ModifyJobs","NotificationPanel","RoleSwitcher","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","role","localStorage","getItem","includes","alert","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","className","path","element","_c2","$RefreshReg$"],"sources":["D:/UNI/ITP_Project/frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\n\nimport Landing from \"./Components/LandPage/Landing\";\nimport CheckStatus from \"./Components/Status/CheckStatus\";\nimport JobF from \"./Components/JobF/JobForm\";\nimport AddTechnician from \"./Components/AddTechnicians/AddTechnician\";\nimport AdminDashboard from \"./Components/Admin/AdminDashboard\";\nimport AllJobs from \"./Components/Admin/AllJobs\";\nimport ModifyJobs from \"./Components/Admin/ModifyJobs\";\nimport NotificationPanel from \"./Components/Admin/NotificationPanel\";\nimport RoleSwitcher from \"./Components/utils/RoleSwitcher\"; // optional, for dev testing\n\n// üîí Role protection wrapper\nfunction ProtectedRoute({ children, allowedRoles }) {\n  const role = localStorage.getItem(\"role\");\n\n  if (!allowedRoles.includes(role)) {\n    alert(\"Access denied. You must be an admin to view this page.\");\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return children;\n}\n\nfunction App() {\n  const role = localStorage.getItem(\"role\");\n\n  return (\n    <div className=\"pt-[90px]\">\n      {/* üß© Optional role testing tool ‚Äî remove later when login is implemented */}\n      <RoleSwitcher />\n\n      <Routes>\n        {/* üåç Default landing route */}\n        <Route\n          path=\"/\"\n          element={\n            role === \"admin\" ? (\n              <Navigate to=\"/admin\" replace />\n            ) : (\n              <Landing />\n            )\n          }\n        />\n\n        {/* üë§ Customer routes */}\n        <Route path=\"/check-status\" element={<CheckStatus />} />\n\n        {/* üõ† Admin routes */}\n        <Route\n          path=\"/admin\"\n          element={\n            <ProtectedRoute allowedRoles={[\"admin\"]}>\n              <AdminDashboard />\n            </ProtectedRoute>\n          }\n        >\n          <Route path=\"create-job\" element={<JobF />} />\n          <Route path=\"add-technician\" element={<AddTechnician />} />\n          <Route path=\"all-jobs\" element={<AllJobs />} />\n          <Route path=\"modify-jobs\" element={<ModifyJobs />} />\n          <Route path=\"notifications\" element={<NotificationPanel />} />\n        </Route>\n\n        {/* üîÅ Catch-all redirect */}\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}